{"ast":null,"code":"var _jsxFileName = \"/Users/mdelgado/Documents/source/FinTech/scaffold-eth/packages/react-app/src/components/Contract/index.jsx\";\nimport React, { useMemo } from \"react\";\nimport { Card } from \"antd\";\nimport { useContractLoader, useContractExistsAtAddress } from \"../../hooks\";\nimport Account from \"../Account\";\nimport DisplayVariable from \"./DisplayVariable\";\nimport FunctionForm from \"./FunctionForm\";\nconst noContractDisplay = /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, \"Loading...\", \" \", /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    padding: 32\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, \"You need to run\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    marginLeft: 4,\n    backgroundColor: \"#f1f1f1\",\n    padding: 4,\n    borderRadius: 4,\n    fontWeight: \"bolder\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}, \"yarn run chain\"), \" \", \"and\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    marginLeft: 4,\n    backgroundColor: \"#f1f1f1\",\n    padding: 4,\n    borderRadius: 4,\n    fontWeight: \"bolder\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}, \"yarn run deploy\"), \" \", \"to see your contract here.\"), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    padding: 32\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    marginRight: 4\n  },\n  role: \"img\",\n  \"aria-label\": \"warning\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }\n}, \"\\u2622\\uFE0F\"), \"Warning: You might need to run\", /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    marginLeft: 4,\n    backgroundColor: \"#f1f1f1\",\n    padding: 4,\n    borderRadius: 4,\n    fontWeight: \"bolder\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n}, \"yarn run deploy\"), \" \", /*#__PURE__*/React.createElement(\"i\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}, \"again\"), \" after the frontend comes up!\"));\n\nconst isQueryable = fn => (fn.stateMutability === \"view\" || fn.stateMutability === \"pure\") && fn.inputs.length === 0;\n\nexport default function Contract({\n  account,\n  gasPrice,\n  signer,\n  provider,\n  name,\n  show,\n  price\n}) {\n  const contracts = useContractLoader(provider);\n  const contract = contracts ? contracts[name] : \"\";\n  const address = contract ? contract.address : \"\";\n  const contractIsDeployed = useContractExistsAtAddress(provider, address);\n  const writeContracts = useContractLoader(signer);\n  const writeContract = writeContracts ? writeContracts[name] : \"\";\n  const displayedContractFunctions = useMemo(() => contract ? Object.values(contract.interface.functions).filter(fn => fn.type === \"function\" && !(show && show.indexOf(fn.name) < 0)) : [], [contract, show]);\n  const contractDisplay = displayedContractFunctions.map(fn => {\n    if (isQueryable(fn)) {\n      // If there are no inputs, just display return value\n      return /*#__PURE__*/React.createElement(DisplayVariable, {\n        key: fn.name,\n        contractFunction: contract[fn.name],\n        functionInfo: fn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }\n      });\n    } // If there are inputs, display a form to allow users to provide these\n\n\n    return /*#__PURE__*/React.createElement(FunctionForm, {\n      key: \"FF\" + fn.name,\n      contractFunction: writeContract[fn.name],\n      functionInfo: fn,\n      provider: provider,\n      gasPrice: gasPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"auto\",\n      width: \"70vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, name, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Account, {\n      address: address,\n      localProvider: provider,\n      injectedProvider: provider,\n      mainnetProvider: provider,\n      price: price,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }), account)),\n    size: \"large\",\n    style: {\n      marginTop: 25,\n      width: \"100%\"\n    },\n    loading: contractDisplay && contractDisplay.length <= 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, contractIsDeployed ? contractDisplay : noContractDisplay));\n}","map":{"version":3,"sources":["/Users/mdelgado/Documents/source/FinTech/scaffold-eth/packages/react-app/src/components/Contract/index.jsx"],"names":["React","useMemo","Card","useContractLoader","useContractExistsAtAddress","Account","DisplayVariable","FunctionForm","noContractDisplay","padding","marginLeft","backgroundColor","borderRadius","fontWeight","marginRight","isQueryable","fn","stateMutability","inputs","length","Contract","account","gasPrice","signer","provider","name","show","price","contracts","contract","address","contractIsDeployed","writeContracts","writeContract","displayedContractFunctions","Object","values","interface","functions","filter","type","indexOf","contractDisplay","map","margin","width","float","marginTop"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport { Card } from \"antd\";\nimport { useContractLoader, useContractExistsAtAddress } from \"../../hooks\";\nimport Account from \"../Account\";\nimport DisplayVariable from \"./DisplayVariable\";\nimport FunctionForm from \"./FunctionForm\";\n\nconst noContractDisplay = (\n  <div>\n    Loading...{\" \"}\n    <div style={{ padding: 32 }}>\n      You need to run{\" \"}\n      <span style={{ marginLeft: 4, backgroundColor: \"#f1f1f1\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n        yarn run chain\n      </span>{\" \"}\n      and{\" \"}\n      <span style={{ marginLeft: 4, backgroundColor: \"#f1f1f1\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n        yarn run deploy\n      </span>{\" \"}\n      to see your contract here.\n    </div>\n    <div style={{ padding: 32 }}>\n      <span style={{ marginRight: 4 }} role=\"img\" aria-label=\"warning\">☢️</span>Warning: You might need to run\n      <span style={{ marginLeft: 4, backgroundColor: \"#f1f1f1\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n        yarn run deploy\n      </span>{\" \"}\n      <i>again</i> after the frontend comes up!\n    </div>\n  </div>\n);\n\nconst isQueryable = fn => (fn.stateMutability === \"view\" || fn.stateMutability === \"pure\") && fn.inputs.length === 0;\n\nexport default function Contract({ account, gasPrice, signer, provider, name, show, price }) {\n  const contracts = useContractLoader(provider);\n  const contract = contracts ? contracts[name] : \"\";\n  const address = contract ? contract.address : \"\";\n  const contractIsDeployed = useContractExistsAtAddress(provider, address);\n  const writeContracts = useContractLoader(signer);\n  const writeContract = writeContracts ? writeContracts[name] : \"\";\n\n\n  const displayedContractFunctions = useMemo(() =>\n    contract ? Object.values(contract.interface.functions)\n      .filter(fn => fn.type === \"function\" && !(show && show.indexOf(fn.name) < 0)) : []\n      , [contract, show])\n\n  const contractDisplay = displayedContractFunctions\n    .map(fn => {\n      if (isQueryable(fn)) {\n        // If there are no inputs, just display return value\n        return <DisplayVariable key={fn.name} contractFunction={contract[fn.name]} functionInfo={fn} />;\n      }\n      // If there are inputs, display a form to allow users to provide these\n      return (\n        <FunctionForm\n          key={\"FF\"+fn.name}\n          contractFunction={writeContract[fn.name]}\n          functionInfo={fn}\n          provider={provider}\n          gasPrice={gasPrice}\n        />\n      );\n    });\n\n\n  return (\n    <div style={{ margin: \"auto\", width: \"70vw\" }}>\n      <Card\n        title={\n          <div>\n            {name}\n            <div style={{ float: \"right\" }}>\n              <Account\n                address={address}\n                localProvider={provider}\n                injectedProvider={provider}\n                mainnetProvider={provider}\n                price={price}\n              />\n              {account}\n            </div>\n          </div>\n        }\n        size=\"large\"\n        style={{ marginTop: 25, width: \"100%\" }}\n        loading={contractDisplay && contractDisplay.length <= 0}\n      >\n        {contractIsDeployed ? contractDisplay : noContractDisplay}\n      </Card>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}