{"ast":null,"code":"var _jsxFileName = \"/Users/mdelgado/Documents/source/FinTech/scaffold-eth/packages/react-app/src/components/Contract/FunctionForm.jsx\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from \"react\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Row, Col, Input, Divider, Tooltip } from \"antd\";\nimport { Transactor } from \"../../helpers\";\nimport tryToDisplay from \"./utils\";\nexport default function FunctionForm({\n  contractFunction,\n  functionInfo,\n  provider,\n  gasPrice\n}) {\n  const [form, setForm] = useState({});\n  const [txValue, setTxValue] = useState();\n  const [returnValue, setReturnValue] = useState();\n  const tx = Transactor(provider, gasPrice);\n\n  const handleUpdateForm = (event, name) => {\n    const formUpdate = { ...form\n    };\n    formUpdate[name] = event.target.value;\n    setForm(formUpdate);\n  };\n\n  const inputs = functionInfo.inputs.map(input => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 2\n    },\n    key: \"inputs\" + input.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: input.name,\n    value: form[input.name],\n    onChange: e => handleUpdateForm(e, input.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  })));\n  const txValueInput = /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 2\n    },\n    key: \"txValueInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"transaction value\",\n    onChange: e => setTxValue(e.target.value),\n    value: txValue,\n    addonAfter: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      placement: \"right\",\n      title: \" * 10^18 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      type: \"dashed\",\n      onClick: async () => {\n        let floatValue = parseFloat(txValue);\n        if (floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, \"\\u2733\\uFE0F\"))), /*#__PURE__*/React.createElement(Col, {\n      span: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      placement: \"right\",\n      title: \"number to hex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      type: \"dashed\",\n      onClick: async () => {\n        setTxValue(BigNumber.from(txValue).toHexString());\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"#\\uFE0F\\u20E3\"))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n\n  if (functionInfo.payable) {\n    inputs.push(txValueInput);\n  }\n\n  const buttonIcon = functionInfo.type === \"call\" ? \"📡\" : \"💸\";\n  inputs.push( /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: \"pointer\",\n      margin: 2\n    },\n    key: \"goButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: e => setReturnValue(e.target.value),\n    defaultValue: \"\",\n    value: returnValue,\n    addonAfter: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: 50,\n        height: 30,\n        margin: 0\n      },\n      type: \"default\",\n      onClick: async () => {\n        console.log(\"CLICK\");\n        const args = functionInfo.inputs.map(input => form[input.name]);\n        const overrides = {};\n\n        if (txValue) {\n          overrides.value = txValue; // ethers.utils.parseEther()\n        } // console.log(\"Running with extras\",extras)\n\n\n        const returned = await tx(contractFunction(...args, overrides));\n        const result = tryToDisplay(returned);\n        console.log(\"SETTING RESULT:\", result);\n        setReturnValue(result);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, buttonIcon),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"right\",\n      opacity: 0.333,\n      paddingRight: 6,\n      fontSize: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, functionInfo.name), /*#__PURE__*/React.createElement(Col, {\n    span: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, inputs)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/mdelgado/Documents/source/FinTech/scaffold-eth/packages/react-app/src/components/Contract/FunctionForm.jsx"],"names":["React","useState","BigNumber","Row","Col","Input","Divider","Tooltip","Transactor","tryToDisplay","FunctionForm","contractFunction","functionInfo","provider","gasPrice","form","setForm","txValue","setTxValue","returnValue","setReturnValue","tx","handleUpdateForm","event","name","formUpdate","target","value","inputs","map","input","margin","e","txValueInput","floatValue","parseFloat","from","toHexString","payable","push","buttonIcon","type","cursor","width","height","console","log","args","overrides","returned","result","textAlign","opacity","paddingRight","fontSize"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from \"react\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Row, Col, Input, Divider, Tooltip } from \"antd\";\nimport { Transactor } from \"../../helpers\";\nimport tryToDisplay from \"./utils\";\n\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice }) {\n  const [form, setForm] = useState({});\n  const [txValue, setTxValue] = useState();\n  const [returnValue, setReturnValue] = useState();\n\n  const tx = Transactor(provider, gasPrice);\n\n  const handleUpdateForm = (event, name) => {\n    const formUpdate = { ...form };\n    formUpdate[name] = event.target.value;\n    setForm(formUpdate);\n  };\n\n  const inputs = functionInfo.inputs.map(input => (\n    <div style={{ margin: 2 }} key={\"inputs\"+input.name}>\n      <Input\n        size=\"large\"\n        placeholder={input.name}\n        value={form[input.name]}\n        onChange={e => handleUpdateForm(e, input.name)}\n      />\n    </div>\n  ));\n\n  const txValueInput = (\n    <div style={{ margin: 2 }} key={\"txValueInput\"}>\n      <Input\n        placeholder=\"transaction value\"\n        onChange={e => setTxValue(e.target.value)}\n        value={txValue}\n        addonAfter={\n          <div>\n            <Row>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title={\" * 10^18 \"}>\n                  <div\n                    type=\"dashed\"\n                    onClick={async () => {\n                      let floatValue = parseFloat(txValue)\n                      if(floatValue) setTxValue(\"\" +floatValue  * 10 ** 18);\n                    }}\n                  >\n                    ✳️\n                  </div>\n                </Tooltip>\n              </Col>\n              <Col span={16}>\n              <Tooltip placement=\"right\" title={\"number to hex\"}>\n                <div\n                  type=\"dashed\"\n                  onClick={async () => {\n                    setTxValue(BigNumber.from(txValue).toHexString());\n                  }}\n                >\n                  #️⃣\n                </div>\n                </Tooltip>\n              </Col>\n            </Row>\n          </div>\n        }\n      />\n    </div>\n  );\n\n  if (functionInfo.payable) {\n    inputs.push(txValueInput);\n  }\n\n  const buttonIcon = functionInfo.type === \"call\" ? \"📡\" : \"💸\";\n  inputs.push(\n    <div style={{ cursor: \"pointer\", margin: 2 }} key={\"goButton\"}>\n      <Input\n        onChange={e => setReturnValue(e.target.value)}\n        defaultValue=\"\"\n        value={returnValue}\n        addonAfter={\n          <div\n            style={{width:50,height:30,margin:0}}\n            type=\"default\"\n            onClick={async () => {\n              console.log(\"CLICK\");\n              const args = functionInfo.inputs.map(input => form[input.name]);\n\n              const overrides = {};\n              if (txValue) {\n                overrides.value = txValue; // ethers.utils.parseEther()\n              }\n\n              // console.log(\"Running with extras\",extras)\n              const returned = await tx(contractFunction(...args, overrides));\n\n              const result = tryToDisplay(returned);\n\n              console.log(\"SETTING RESULT:\", result);\n              setReturnValue(result);\n            }}\n          >\n            {buttonIcon}\n          </div>\n        }\n      />\n    </div>,\n  );\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={16}>{inputs}</Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}