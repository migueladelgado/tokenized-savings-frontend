{"ast":null,"code":"import { useMemo } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport BurnerProvider from \"burner-provider\";\nimport { INFURA_ID } from \"../constants\";\n\nconst useUserProvider = (injectedProvider, localProvider) => useMemo(() => {\n  if (injectedProvider) {\n    console.log(\"ðŸ¦Š Using injected provider\");\n    return injectedProvider;\n  }\n\n  if (!localProvider) return undefined;\n\n  if (localProvider.connection && localProvider.connection.url) {\n    console.log(\"ðŸ”¥ Using burner provider\");\n    return new Web3Provider(new BurnerProvider(localProvider.connection.url));\n  } // eslint-disable-next-line no-underscore-dangle\n\n\n  const networkName = localProvider._network && localProvider._network.name;\n  return new Web3Provider(new BurnerProvider(`https://${networkName || \"mainnet\"}.infura.io/v3/${INFURA_ID}`));\n}, [injectedProvider, localProvider]);\n\nexport default useUserProvider;","map":{"version":3,"sources":["/Users/mdelgado/Documents/source/FinTech/scaffold-eth/packages/react-app/src/hooks/UserProvider.js"],"names":["useMemo","Web3Provider","BurnerProvider","INFURA_ID","useUserProvider","injectedProvider","localProvider","console","log","undefined","connection","url","networkName","_network","name"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,MAAMC,eAAe,GAAG,CAACC,gBAAD,EAAmBC,aAAnB,KACtBN,OAAO,CAAC,MAAM;AACZ,MAAIK,gBAAJ,EAAsB;AACpBE,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,WAAOH,gBAAP;AACD;;AACD,MAAI,CAACC,aAAL,EAAoB,OAAOG,SAAP;;AACpB,MAAIH,aAAa,CAACI,UAAd,IAA4BJ,aAAa,CAACI,UAAd,CAAyBC,GAAzD,EAA8D;AAC5DJ,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,WAAO,IAAIP,YAAJ,CAAiB,IAAIC,cAAJ,CAAmBI,aAAa,CAACI,UAAd,CAAyBC,GAA5C,CAAjB,CAAP;AACD,GATW,CAUZ;;;AACA,QAAMC,WAAW,GAAGN,aAAa,CAACO,QAAd,IAA0BP,aAAa,CAACO,QAAd,CAAuBC,IAArE;AACA,SAAO,IAAIb,YAAJ,CAAiB,IAAIC,cAAJ,CAAoB,WAAUU,WAAW,IAAI,SAAU,iBAAgBT,SAAU,EAAjF,CAAjB,CAAP;AACD,CAbM,EAaJ,CAACE,gBAAD,EAAmBC,aAAnB,CAbI,CADT;;AAgBA,eAAeF,eAAf","sourcesContent":["import { useMemo } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport BurnerProvider from \"burner-provider\";\nimport { INFURA_ID } from \"../constants\";\n\nconst useUserProvider = (injectedProvider, localProvider) =>\n  useMemo(() => {\n    if (injectedProvider) {\n      console.log(\"ðŸ¦Š Using injected provider\");\n      return injectedProvider;\n    }\n    if (!localProvider) return undefined;\n    if (localProvider.connection && localProvider.connection.url) {\n      console.log(\"ðŸ”¥ Using burner provider\");\n      return new Web3Provider(new BurnerProvider(localProvider.connection.url));\n    }\n    // eslint-disable-next-line no-underscore-dangle\n    const networkName = localProvider._network && localProvider._network.name;\n    return new Web3Provider(new BurnerProvider(`https://${networkName || \"mainnet\"}.infura.io/v3/${INFURA_ID}`));\n  }, [injectedProvider, localProvider]);\n\nexport default useUserProvider;\n"]},"metadata":{},"sourceType":"module"}