{"ast":null,"code":"var _jsxFileName = \"/Users/mdelgado/Documents/source/FinTech/scaffold-eth/packages/react-app/src/App.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { getDefaultProvider, InfuraProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport \"./App.css\";\nimport { Row, Col, Button } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress, useBalance } from \"eth-hooks\";\nimport { useExchangePrice, useGasPrice, useUserProvider } from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge } from \"./components\";\nimport Hints from \"./Hints\";\n/*\n    Welcome to 🏗 scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n*/\n\nimport { INFURA_ID, ETHERSCAN_KEY } from \"./constants\"; // 🛰 providers\n\nconsole.log(\"📡 Connecting to mainnet\"); // ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_ID:\n\nconst mainnetProvider = getDefaultProvider(\"mainnet\", {\n  infura: INFURA_ID,\n  etherscan: ETHERSCAN_KEY,\n  quorum: 1\n}); //const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//const mainnetProvider = new JsonRpcProvider(\"https://mainnet.infura.io/v3/5ce0898319eb4f5c9d4c982c8f78392a\")\n\nconst localProviderUrl = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : \"http://localhost:8545\";\nconsole.log(\"📡 Connecting to\", localProviderUrl);\nconst localProvider = new JsonRpcProvider(localProviderUrl);\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\n\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true,\n  // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        infuraId: INFURA_ID\n      }\n    }\n  }\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider(); // console.log(\"Cleared cache provider!?!\",clear)\n\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nfunction App() {\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* 💵 this hook will get the price of ETH from 🦄 Uniswap:*/\n\n  const price = useExchangePrice(mainnetProvider);\n  /* ⛽️ this hook will get the price of ETH from 🦄 Uniswap */\n\n  const gasPrice = useGasPrice(\"fast\"); // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider); // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address); // just plug in different 🛰 providers to get your balance on different chains:\n  // const yourMainnetBalance = useBalance(mainnetProvider, address);\n  // Load in your local 📝 contract and read a value from it:\n  // const readContracts = useContractLoader(localProvider)\n  // console.log(\"readContracts\",readContracts)\n  // const owner = useCustomContractReader(readContracts?readContracts['YourContract']:\"\", \"owner\")\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  console.log(\"localProvider\", localProvider);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"right\",\n      right: 0,\n      top: 0,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Account, {\n    address: address,\n    localProvider: localProvider,\n    userProvider: userProvider,\n    mainnetProvider: mainnetProvider,\n    price: price,\n    web3Modal: web3Modal,\n    loadWeb3Modal: loadWeb3Modal,\n    logoutOfWeb3Modal: logoutOfWeb3Modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Contract, {\n    name: \"YourContract\",\n    signer: userProvider.getSigner(),\n    provider: localProvider,\n    address: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Hints, {\n    address: address,\n    yourLocalBalance: yourLocalBalance,\n    price: price,\n    mainnetProvider: mainnetProvider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"left\",\n      left: 0,\n      bottom: 20,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Ramp, {\n    price: price,\n    address: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"center\",\n      opacity: 0.8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GasGauge, {\n    gasPrice: gasPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"center\",\n      opacity: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n    },\n    size: \"large\",\n    shape: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    role: \"img\",\n    \"aria-label\": \"support\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"\\uD83D\\uDCAC\"), \"Support\"))), /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  },\n  /*  if the local provider has a signer, let's show the faucet:  */\n  localProvider && !process.env.REACT_APP_PROVIDER ? /*#__PURE__*/React.createElement(Faucet, {\n    localProvider: localProvider,\n    price: price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }) : \"\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mdelgado/Documents/source/FinTech/scaffold-eth/packages/react-app/src/App.jsx"],"names":["React","useCallback","useEffect","useState","getDefaultProvider","InfuraProvider","JsonRpcProvider","Web3Provider","Row","Col","Button","Web3Modal","WalletConnectProvider","useUserAddress","useBalance","useExchangePrice","useGasPrice","useUserProvider","Header","Account","Faucet","Ramp","Contract","GasGauge","Hints","INFURA_ID","ETHERSCAN_KEY","console","log","mainnetProvider","infura","etherscan","quorum","localProviderUrl","process","env","REACT_APP_PROVIDER","localProvider","web3Modal","cacheProvider","providerOptions","walletconnect","package","options","infuraId","logoutOfWeb3Modal","clearCachedProvider","setTimeout","window","location","reload","App","injectedProvider","setInjectedProvider","price","gasPrice","userProvider","address","yourLocalBalance","loadWeb3Modal","provider","connect","cachedProvider","position","textAlign","right","top","padding","getSigner","left","bottom","opacity","open","marginRight"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { getDefaultProvider, InfuraProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport \"./App.css\";\nimport { Row, Col, Button } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress, useBalance } from \"eth-hooks\";\nimport { useExchangePrice, useGasPrice, useUserProvider } from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge } from \"./components\";\nimport Hints from \"./Hints\";\n/*\n    Welcome to 🏗 scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n*/\nimport { INFURA_ID, ETHERSCAN_KEY } from \"./constants\";\n\n// 🛰 providers\nconsole.log(\"📡 Connecting to mainnet\")\n// ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_ID:\nconst mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY , quorum: 1 });\n//const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//const mainnetProvider = new JsonRpcProvider(\"https://mainnet.infura.io/v3/5ce0898319eb4f5c9d4c982c8f78392a\")\n\nconst localProviderUrl = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : \"http://localhost:8545\"\nconsole.log(\"📡 Connecting to\",localProviderUrl)\nconst localProvider = new JsonRpcProvider(localProviderUrl);\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  // console.log(\"Cleared cache provider!?!\",clear)\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nfunction App() {\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* 💵 this hook will get the price of ETH from 🦄 Uniswap:*/\n  const price = useExchangePrice(mainnetProvider);\n\n  /* ⛽️ this hook will get the price of ETH from 🦄 Uniswap */\n  const gasPrice = useGasPrice(\"fast\");\n\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n  // just plug in different 🛰 providers to get your balance on different chains:\n  // const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // Load in your local 📝 contract and read a value from it:\n  // const readContracts = useContractLoader(localProvider)\n  // console.log(\"readContracts\",readContracts)\n  // const owner = useCustomContractReader(readContracts?readContracts['YourContract']:\"\", \"owner\")\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  console.log(\"localProvider\",localProvider)\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userProvider={userProvider}\n          mainnetProvider={mainnetProvider}\n          price={price}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n        />\n      </div>\n\n      {/*\n          🎛 this scaffolding is full of commonly used components\n          this <Contract/> component will automatically parse your ABI\n          and give you a form to interact with it locally\n      */}\n\n      <Contract name=\"YourContract\" signer={userProvider.getSigner()} provider={localProvider} address={address} />\n\n      <Hints address={address} yourLocalBalance={yourLocalBalance} price={price} mainnetProvider={mainnetProvider} />\n\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} />\n          </Col>\n\n          <Col span={8} style={{textAlign:\"center\", opacity:0.8}}>\n            <GasGauge gasPrice={gasPrice}/>\n          </Col>\n          <Col span={8} style={{textAlign:\"center\", opacity:1}}>\n            <Button onClick={()=>{window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\")}} size=\"large\" shape=\"round\">\n              <span style={{marginRight:8}} role=\"img\" aria-label=\"support\">💬</span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              (localProvider && !process.env.REACT_APP_PROVIDER)?\n              <Faucet localProvider={localProvider} price={price} />:\n              \"\"\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}